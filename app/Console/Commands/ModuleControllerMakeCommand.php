<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Console\GeneratorCommand;
use Illuminate\Filesystem\Filesystem;
use Illuminate\Routing\Console\ControllerMakeCommand;

class ModuleControllerMakeCommand extends ControllerMakeCommand
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'module:controller
                            {module : 模块名称}
                            {controller : 控制器名称}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = '生成对应模块的控制器';

    protected $module;

    protected $controller;

    /**
     * Create a new command instance.
     *
     * @return void
     */
    public function __construct(Filesystem $files)
    {
        parent::__construct($files);
    }

    /**
     * Get the default namespace for the class.
     *
     * @param string $rootNamespace
     * @return string
     */
    protected function getDefaultNamespace($rootNamespace)
    {
        $module = ucfirst($this->module);
        return $rootNamespace . "\{$module}\Http\Controllers";
    }

    protected function getNameInput()
    {
        return trim($this->argument('controller')); // TODO: Change the autogenerated stub
    }

    protected function rootNamespace()
    {
        $this->info('rootNamespace is running.');
        $module = ucfirst($this->module);
        return "Modules\\{$module}\\"; // TODO: Change the autogenerated stub
    }

    public function handle()
    {
        if (!$this->hasArgument('module') || !$this->hasArgument('controller')) {
            $this->error('请输入模块名和控制器名');
            return Command::FAILURE;
        }
        $this->module = $this->argument('module');
        $this->controller = $this->argument('controller');
        return parent::handle(); // TODO: Change the autogenerated stub
    }
}
